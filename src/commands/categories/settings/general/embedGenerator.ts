import { generalVerification } from "@src/rest/FalsonApiREST";
import {
  FalsonEmbedColors,
  VerificationType,
  VerificationTypeWords,
} from "@src/types";
import { StringMerger } from "@src/utils/StringMerger";
import {
  ActionRowBuilder,
  EmbedBuilder,
  Guild,
  StringSelectMenuBuilder,
} from "discord.js";

export async function traditionEmbedGenerator(guild: Guild) {
  const settings = await generalVerification.fetchGeneralSettings(guild.id);
  const embed = new EmbedBuilder()
    .setTitle(`–ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞`)
    .setColor(FalsonEmbedColors.Discord)
    .setThumbnail(guild.iconURL())
    .setFields(
      {
        name: `–¢–∏–ø –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
        value: `${VerificationTypeWords[settings.type]}`,
        inline: false,
      },
      {
        name: `–†–æ–ª–∏ –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`,
        value: `${settings.unverifyRole ? StringMerger.roleMerger([settings.unverifyRole]) : "**–ù–µ—Ç**"}`,
        inline: true,
      },
      {
        name: "–†–æ–ª–∏ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
        value: `${settings.verificationRoles.length >= 1 ? StringMerger.roleMerger(settings.verificationRoles) : "**–ù–µ—Ç**"}`,
        inline: true,
      }
    );
  const verificationTypeSelect =
    new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(
      new StringSelectMenuBuilder()
        .setCustomId(`verificationTypeChanger`)
        .setPlaceholder(`–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`)
        .setOptions(
          {
            label: `–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è`,
            value: `${VerificationType.Traditional}`,
            description: "–ü—Ä–∏–≤—ã—á–Ω–∞—è –≤—Å–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–∞–º",
            emoji: "üìñ",
          },
          {
            label: `–ì–æ–ª–æ—Å–æ–≤–∞—è`,
            value: `${VerificationType.Voice}`,
            description: "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ support –∫–∞–∫ –Ω–∞ –∫—Ä—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö",
            emoji: "üîä",
          },
          {
            label: `–î–≤–æ–π–Ω–æ–π [PREMIUM]`,
            value: `${VerificationType.Both}`,
            description: "–°–∏—Å—Ç–µ–º–∞ —Å –≥–æ–ª–æ—Å–æ–≤–æ–π –∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π",
            emoji: "üõ†",
          }
        )
    );

  return { embed, verificationTypeSelect };
}
