import BaseCommand from "@src/abstractions/BaseCommand";
import { FalsonEmbedColors, GuildType } from "@src/types";
import {
  ActionRowBuilder,
  CommandInteraction,
  EmbedBuilder,
  SlashCommandBuilder,
  StringSelectMenuBuilder,
} from "discord.js";

export class SettingsCommand extends BaseCommand {
  constructor() {
    super({
      isSlash: true,
      type: GuildType.Everyone,
      builder: new SlashCommandBuilder()
        .setName(`settings`)
        .setDescription(`Verification settings`)
        .setNameLocalizations({
          ru: "–Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
          "en-US": "settings",
          "en-GB": "settings",
        })
        .setDescriptionLocalizations({
          ru: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
          "en-US": "Verification settings",
          "en-GB": "Verification settings",
        }),
    });
  }

  async execute(interaction: CommandInteraction) {
    // TODO: –ø–µ—Ä–µ–≤–æ–¥ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏ –æ–ø—Ü–∏–π –≤–Ω—É—Ç—Ä–∏
    await interaction.deferReply({ ephemeral: true });
    const embed = new EmbedBuilder()
      .setTitle(`–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π`)
      .setDescription(`–ü—Ä–∏ –ø–æ–º–æ—â–∏ –º–µ–Ω—é –Ω–∏–∂–µ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é`)
      .setColor(FalsonEmbedColors.Discord)
      .setThumbnail(interaction.guild.iconURL());
    const selectMenu = new StringSelectMenuBuilder()
      .setCustomId(`settingscategory_${interaction.guild.id}`)
      .setOptions(
        {
          label: `–ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞`,
          value: `global`,
          description: `–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞—Å–∞—é—â–∏—Ö—Å—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
          emoji: "‚öô",
        },
        {
          label: `–ì–æ–ª–æ—Å–æ–≤–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è`,
          value: `voice`,
          description: `–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
          emoji: "üîä",
        },
        {
          label: `–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è`,
          value: `tradition`,
          description: `–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏`,
          emoji: "üìñ",
        },
        {
          label: `–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ`,
          value: `logs`,
          description: `–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è`,
          emoji: "üìù",
        }
      );
    const row = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(
      selectMenu
    );
    return interaction.editReply({ components: [row], embeds: [embed] });
  }
}
